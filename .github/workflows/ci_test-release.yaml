name: npm CI for test and release actions

on:
  push:
    branches:
      - 'main'
      - 'feature/**'
      - 'fix/**'
  pull_request:
    branches:
      - 'main'

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # shallow clones should be disabled for a better relevancy of analysis
      - name: Update Node.js to latest stable version
        run: |
          sudo npm cache clean -f
          sudo npm install -g n
          sudo n stable
      - name: Install dependencies
        run: npm ci
      - name: Test project
        run: npm test
      - name: Perform static code analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cp ./.github/workflows/sonar-project.properties ./
          npm run scan

  consistency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Update Node.js to latest stable version
        run: |
          sudo npm cache clean -f
          sudo npm install -g n
          sudo n stable
      - name: Install dependencies
        run: npm install
      - name: Compare the expected and actual package-lock.json files
        run: |
          if [[ "$(git diff ./package-lock.json | wc -l)" -gt "0" ]]; then
            echo "The package-lock.json file is not up to date." >&2
            exit 1
          fi

  release:
    needs: [ test, consistency-check ]
    if: github.event_name == 'push' && github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Update Node.js to latest stable version
        run: |
          sudo npm cache clean -f
          sudo npm install -g n
          sudo n stable
      - name: Install dependencies
        run: npm ci
      - name: Perform tagging if version has changed
        id: tagging
        uses: brettaufheber/auto-tagging-action@v1
        with:
          command: jq -r '.version' package.json
          snapshot-pattern: ^0\.  # major part is 0
          tag-prefix: v
      - name: Publish to public npm registry
        if: ${{ steps.tagging.outputs.tag-created == 'yes' }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
          npm config set 'registry=https://registry.npmjs.org'
          npm publish --access public
